import argparse
import json
from scanner import scan_service
from vulnerability_utils import get_vulnerabilities, simplify_vulnerability


# Main function
if __name__ == '__main__':
    # Create the parser
    parser = argparse.ArgumentParser(description='Scan services for vulnerabilities.')

    # Add the arguments
    parser.add_argument('JsonFile', metavar='jsonfile', type=str, nargs='?', default='services.json',
                        help='The JSON file containing the services to be scanned. Defaults to "services.json".')

    # Parse the arguments
    args = parser.parse_args()

    # Read services from JSON file
    with open(args.JsonFile) as f:
        services = json.load(f)

    # Scan each service and print the detected version
    for service in services:
        version = scan_service(service)
        print(f"Detected {service['service_type']} version: {version}")
        # get the vulnerabilities
        vulnerabilities = get_vulnerabilities(service['service_type'], version)
        # Sort vulnerabilities by score in descending order
        vulnerabilities.sort(
            key=lambda v: v.v31score if hasattr(v, 'v31score') else v.v2score if hasattr(v, 'v2score') else 0,
            reverse=True)
        # Display vulnerability information
        print(f"Vulnerabilities affecting {service['service_type']} version {version}:")
        for vulnerability in vulnerabilities:
            print(simplify_vulnerability(vulnerability))
